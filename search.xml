<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Matplotlib 教程]]></title>
    <url>%2Fposts%2F38c78f8c.html</url>
    <content type="text"><![CDATA[之前已经分享过关于Matplotlib作图的文章，但是在使用的过程中还存在混乱之处。因此，本文的目的是理清使用Matplotlib作图的思路，从会作图过渡到做好图。当然，本文内容只是冰山一角。 首先，必须读懂下面的张图。只有读懂这张图，才不会在做图的过程中出现混乱或者遗漏的情况。不懂，请bing或者google。 作图的基本思路：导入模块→确定图的尺寸→坐标轴的范围→线条的基本设置（颜色，大小，样式等）→图例设置 →保存图片 12345678910111213141516171819202122232425262728293031323334353637import numpy as npimport matplotlib.pyplot as plt# Create a figure of size 8x6 inches, 80 dots per inchplt.figure(figsize=(8,6),dpi=80)# Create a new subplot from a grid of 1x1plt.subplot(1,1,1)# Set x limitsplt.xlim(-4.0, 4.0)# Set x ticksplt.xticks(np.linspace(-4, 4, 9, endpoint=True))#set ylimitsplt.ylim(-1.2,1.2)# Set y ticksplt.yticks(np.linspace(-1.2,1.2,5,endpoint=True))X = np.linspace(-np.pi, np.pi, 256, endpoint=True)C, S = np.cos(X), np.sin(X)marker_on=[5,20,27,80]# Plot cosine with a blue continuous line of width 1 (pixels)plt.plot(X,C,color="#fd3c06",linewidth=1.0,linestyle=':',marker='*',markevery=marker_on,label="cosine")# Plot sine with a green continuous line of width 1 (pixels)plt.plot(X,S,color="green",linewidth=1.0,linestyle="--",marker='s',markevery=marker_on,label="sine")#Adding a legendplt.legend(loc= 5)# Save figure using 100dots per inchplt.savefig("try.jpg",dpi=100,bbox_inches='tight')# Show result on screenplt.show() 注：本文统一使用关键词的方式 plt.figure()figure（）可设置的参数 Argument Default Description num 1 number of figure figsize figure.figsize figure size in inches (width, height) dpi figure.dpi resolution in dots per inch facecolor figure.facecolor color of the drawing background edgecolor figure.edgecolor color of edge around the drawing background frameon True draw figure frame or not figsize,dpi为常用的两个参数，决定了图形的大小以及像素的高低。 补充两个知识点， 1英寸=2.54cm DPI（Dot Per Inch） 表示打印分辨率，指每英寸长度上的点数。DPI 又可细分为水平分辨率和垂直分辨率，例如一张 “1英寸1英寸” （1英寸=2.54cm）的图片，如果它的水平分辨率是100 dpi，垂直分辨率是50 dpi，那么就是说，它水平每英寸分成100小段，垂直每英寸分成50小段，就像米尺上的一格格那样。那么这张图总共有10050=5000个格子，这张图片共有5000像素。由于它的水平分辨率和垂直分辨率不相等，所以每个像素是一个微小的长方形，如下图左上角的小长方形：原文：https://blog.csdn.net/wangwenjing90/article/details/8791415 1plt.figure(figsize=(8,6),dpi=80) plt.plot(）12plt.plot(X,C,color="#fd3c06",linewidth=1.0,linestyle=':',marker='*',markevery=marker_on,label="cosine")plt.plot(X,S,color="green",linewidth=1.0,linestyle="--",marker='s',markevery=marker_on,label="sine") plt.plot()可控制的参数 Property Description Appearance alpha (or a) alpha transparency on 0-1 scale antialiased True or False - use antialised rendering color (or c) matplotlib color arg linestyle (or ls) see Line properties linewidth (or lw) float, the line width in points solid_capstyle Cap style for solid lines solid_joinstyle Join style for solid lines dash_capstyle Cap style for dashes dash_joinstyle Join style for dashes marker see Markers markeredgewidth (mew) line width around the marker symbol markeredgecolor (mec) edge color if a marker is used markerfacecolor (mfc) face color if a marker is used markersize (ms) size of the marker in points 这么多参数，不是每个都会用到。其中，alpha,color,linewidth,linestyle，marker使用频率较高。 color常规的几种颜色，用简写或者全称都可以 12345678b: blueg: greenr: redc: cyanm: magentay: yellowk: blackw: white 也可以使用颜色代码的方式选择合适的颜色color=&quot;#fd3c06&quot; 图片中的代码，依旧是RGB色值的表示。在计算机中，RGB的每个通道，通常都以8位2进制空间来存储，因此能对每个通道进行256阶分级：以10进制数表示时，范围为0~255；以16进制数表示时，范围为0~FF。 图中 #412ed1 的表示方法，就是采用了16进制的表示：开头的 # ，是一个标记（这种表示常见于html及css等编码中）；后面的6个数码，2个2个2个分隔，依次对应R、G、B三个通道。 也就是说，#412ed1相当于 R=(hex)41, G=(hex)2e, B=(hex)d1。 作者：钱争予 链接：https://www.zhihu.com/question/19690341/answer/12743818 来源：知乎 RGB是色光的色彩模式。R代表红色，G代表绿色，B代表蓝色，三种色彩叠加形成了其它的色彩。因为三种颜色都有256个亮度水平级，所以三种色彩叠加就形成1670万种颜色了。也就是真彩色，通过它们足以在现绚丽的世界。对于单独的R或G或B而言，当数值为0的时候，代表这个颜色不发光；如果为255，则该颜色为最高亮度。这就好像调光台灯一样，数字0就等于把灯关了，数字255就等于把调光旋钮开到最大。 https://www.biaodianfu.com/color.html 获取颜色代码的方式： https://xkcd.com/color/rgb/ google，可以调节自己喜欢的颜色 linestyle1234- solid line style-- dashed line style-. dash-dot line style: dotted line style marker12345678910111213141516171819202122. point marker, pixel markero circle markerv triangle_down marker^ triangle_up marker&lt; triangle_left marker&gt; triangle_right marker1 tri_down marker2 tri_up marker3 tri_left marker4 tri_right markers square markerp pentagon marker* star markerh hexagon1 markerH hexagon2 marker+ plus markerx x markerD diamond markerd thin_diamond marker| vline marker_ hline marker plt.legend()设置图例的位置 1plt.legend(loc= 5) Location String Location Code ‘best’ 0 ‘upper right’ 1 ‘upper left’ 2 ‘lower left’ 3 ‘lower right’ 4 ‘right’ 5 ‘center left’ 6 ‘center right’ 7 ‘lower center’ 8 ‘upper center’ 9 ‘center’ 10 plt.fill_between()12345678910111213141516171819202122import numpy as npimport matplotlib.pyplot as pltn = 256X = np.linspace(-np.pi, np.pi, n, endpoint=True)Y = np.sin(2 * X)plt.axes([0.025, 0.025, 0.95, 0.95])plt.plot(X, Y +1, color='blue', alpha=1.00)plt.fill_between(X, 1, Y+1 , facecolor='blue', alpha=0.5)plt.plot(X, Y - 1, color='blue', alpha=1.00)plt.fill_between(X, -1, Y - 1, (Y - 1) &gt; -1, color='blue', alpha=.25)plt.fill_between(X, -1, Y - 1, (Y - 1) &lt; -1, color='red', alpha=.25)plt.xlim(-np.pi, np.pi)plt.xticks(())plt.ylim(-2.5, 2.5)plt.yticks(())plt.show() https://blog.csdn.net/kabuto_hui/article/details/84979606 1plt.fill_between(X, 1, Y+1 , color=&apos;blue&apos;, alpha=0.5) x：第一个参数表示覆盖的区域，我直接复制为x，表示整个x都覆盖1：表示覆盖的下限y+1：表示覆盖的上限是y这个曲线facecolor：覆盖区域的颜色alpha：覆盖区域的透明度[0,1],其值越大，表示越不透明 plt.savefig()可以保存好的大部分图片类型,如jpg,png等，也可以保存为pdf格式,bbox_inches=’tight’删除空白 1plt.savefig(&quot;try.jpg&quot;,dpi=100,bbox_inches=&apos;tight&apos;) 参考：http://scipy-lectures.org/intro/matplotlib/index.html https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot ##]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Matplotlib</tag>
      </tags>
  </entry>
</search>
